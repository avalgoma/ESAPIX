### YamlMime:ManagedReference
items:
- uid: ESAPIX.Extensions.StructureExtensions
  commentId: T:ESAPIX.Extensions.StructureExtensions
  id: StructureExtensions
  parent: ESAPIX.Extensions
  children:
  - ESAPIX.Extensions.StructureExtensions.GetTargetStats(Structure,PlanningItem,DoseValue,TargetStat[])
  - ESAPIX.Extensions.StructureExtensions.VoxelsOnSlice(Structure,Image,System.Int32)
  langs:
  - csharp
  - vb
  name: StructureExtensions
  nameWithType: StructureExtensions
  fullName: ESAPIX.Extensions.StructureExtensions
  type: Class
  source:
    id: StructureExtensions
    path: ''
    startLine: 4013
  assemblies:
  - cs.temp.dll
  namespace: ESAPIX.Extensions
  syntax:
    content: public static class StructureExtensions
    content.vb: Public Module StructureExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: ESAPIX.Extensions.StructureExtensions.VoxelsOnSlice(Structure,Image,System.Int32)
  commentId: M:ESAPIX.Extensions.StructureExtensions.VoxelsOnSlice(Structure,Image,System.Int32)
  id: VoxelsOnSlice(Structure,Image,System.Int32)
  isExtensionMethod: true
  parent: ESAPIX.Extensions.StructureExtensions
  langs:
  - csharp
  - vb
  name: VoxelsOnSlice(Structure, Image, Int32)
  nameWithType: StructureExtensions.VoxelsOnSlice(Structure, Image, Int32)
  fullName: ESAPIX.Extensions.StructureExtensions.VoxelsOnSlice(Structure, Image, System.Int32)
  type: Method
  source:
    id: VoxelsOnSlice
    path: ''
    startLine: 4022
  assemblies:
  - cs.temp.dll
  namespace: ESAPIX.Extensions
  summary: "\nReturns the voxel HU from a given slice within a structure. Voxels outside the structure are NaN\n"
  example: []
  syntax:
    content: public static double[, ] VoxelsOnSlice(this Structure str, Image image, int sliceZ)
    parameters:
    - id: str
      type: Structure
      description: the structure
    - id: image
      type: Image
      description: the image containing voxels
    - id: sliceZ
      type: System.Int32
      description: the slice of the image
    return:
      type: System.Double[,]
      description: display units of the image
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function VoxelsOnSlice(str As  Structure, image As Image, sliceZ As Integer) As Double(,)
  overload: ESAPIX.Extensions.StructureExtensions.VoxelsOnSlice*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: ESAPIX.Extensions.StructureExtensions.GetTargetStats(Structure,PlanningItem,DoseValue,TargetStat[])
  commentId: M:ESAPIX.Extensions.StructureExtensions.GetTargetStats(Structure,PlanningItem,DoseValue,TargetStat[])
  id: GetTargetStats(Structure,PlanningItem,DoseValue,TargetStat[])
  isExtensionMethod: true
  parent: ESAPIX.Extensions.StructureExtensions
  langs:
  - csharp
  - vb
  name: GetTargetStats(Structure, PlanningItem, DoseValue, TargetStat[])
  nameWithType: StructureExtensions.GetTargetStats(Structure, PlanningItem, DoseValue, TargetStat[])
  fullName: ESAPIX.Extensions.StructureExtensions.GetTargetStats(Structure, PlanningItem, DoseValue, TargetStat[])
  type: Method
  source:
    id: GetTargetStats
    path: ''
    startLine: 4044
  assemblies:
  - cs.temp.dll
  namespace: ESAPIX.Extensions
  syntax:
    content: public static Dictionary<TargetStat, double> GetTargetStats(this Structure s, PlanningItem pi, DoseValue referenceDose, params TargetStat[] desiredStats)
    parameters:
    - id: s
      type: Structure
    - id: pi
      type: PlanningItem
    - id: referenceDose
      type: DoseValue
    - id: desiredStats
      type: TargetStat[]
    return:
      type: Dictionary{TargetStat,System.Double}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetTargetStats(s As  Structure, pi As PlanningItem, referenceDose As DoseValue, ParamArray desiredStats As TargetStat()) As Dictionary(Of TargetStat, Double)
  overload: ESAPIX.Extensions.StructureExtensions.GetTargetStats*
  nameWithType.vb: StructureExtensions.GetTargetStats(Structure, PlanningItem, DoseValue, TargetStat())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: ESAPIX.Extensions.StructureExtensions.GetTargetStats(Structure, PlanningItem, DoseValue, TargetStat())
  name.vb: GetTargetStats(Structure, PlanningItem, DoseValue, TargetStat())
references:
- uid: ESAPIX.Extensions
  commentId: N:ESAPIX.Extensions
  isExternal: false
  name: ESAPIX.Extensions
  nameWithType: ESAPIX.Extensions
  fullName: ESAPIX.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: ESAPIX.Extensions.StructureExtensions.VoxelsOnSlice*
  commentId: Overload:ESAPIX.Extensions.StructureExtensions.VoxelsOnSlice
  isExternal: false
  name: VoxelsOnSlice
  nameWithType: StructureExtensions.VoxelsOnSlice
  fullName: ESAPIX.Extensions.StructureExtensions.VoxelsOnSlice
- uid: Structure
  isExternal: true
  name: Structure
  nameWithType: Structure
  fullName: Structure
- uid: Image
  isExternal: true
  name: Image
  nameWithType: Image
  fullName: Image
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Double[,]
  name: Double[,]
  nameWithType: Double[,]
  fullName: System.Double[,]
  nameWithType.vb: Double(,)
  fullName.vb: System.Double(,)
  name.vb: Double(,)
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[,]'
    nameWithType: '[,]'
    fullName: '[,]'
  spec.vb:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: (,)
    nameWithType: (,)
    fullName: (,)
- uid: ESAPIX.Extensions.StructureExtensions.GetTargetStats*
  commentId: Overload:ESAPIX.Extensions.StructureExtensions.GetTargetStats
  isExternal: false
  name: GetTargetStats
  nameWithType: StructureExtensions.GetTargetStats
  fullName: ESAPIX.Extensions.StructureExtensions.GetTargetStats
- uid: PlanningItem
  isExternal: true
  name: PlanningItem
  nameWithType: PlanningItem
  fullName: PlanningItem
- uid: DoseValue
  isExternal: true
  name: DoseValue
  nameWithType: DoseValue
  fullName: DoseValue
- uid: TargetStat[]
  name: TargetStat[]
  nameWithType: TargetStat[]
  fullName: TargetStat[]
  nameWithType.vb: TargetStat()
  fullName.vb: TargetStat()
  name.vb: TargetStat()
  spec.csharp:
  - uid: TargetStat
    name: TargetStat
    nameWithType: TargetStat
    fullName: TargetStat
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: TargetStat
    name: TargetStat
    nameWithType: TargetStat
    fullName: TargetStat
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Dictionary{TargetStat,System.Double}
  commentId: '!:Dictionary{TargetStat,System.Double}'
  definition: Dictionary`2
  name: Dictionary<TargetStat, Double>
  nameWithType: Dictionary<TargetStat, Double>
  fullName: Dictionary<TargetStat, System.Double>
  nameWithType.vb: Dictionary(Of TargetStat, Double)
  fullName.vb: Dictionary(Of TargetStat, System.Double)
  name.vb: Dictionary(Of TargetStat, Double)
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TargetStat
    name: TargetStat
    nameWithType: TargetStat
    fullName: TargetStat
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TargetStat
    name: TargetStat
    nameWithType: TargetStat
    fullName: TargetStat
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
